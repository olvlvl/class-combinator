<?php

/*
 * This file is part of the olvlvl/class-combinator package.
 *
 * (c) Olivier Laviale <olivier.laviale@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace olvlvl\ClassCombinator;

class FileCombinator
{
	/**
	 * @param array $files
	 * @param string $root
	 *
	 * @return string
	 */
	public function __invoke(array $files, $root)
	{
		$files = array_unique($files);
		$root_length = strlen($root);
		$strip_root = function ($path) use ($root_length) {
			return substr($path, $root_length);
		};

		$imported_files = array_map($strip_root, $files);
		sort($imported_files);
		$imploded_files = ' * ' . implode("\n * ", $imported_files);
		$count = count($files);

		$combined = <<<EOT
<?php

/*
 * Automatically generated by olvlvl/class-combinator, using the following $count files:
 *
$imploded_files
 */

EOT;

		foreach ($files as $filename) {
			$contents = file_get_contents($filename);
			$tokens = token_get_all($contents);
			$cleaned = '';
			$has_namespace = false;

			foreach ($tokens as $token) {
				if (is_string($token)) {
					$cleaned .= $token;

					continue;
				}

				list($token_id, $token_value) = $token;

				if (in_array($token_id, [T_CLOSE_TAG, T_COMMENT, T_OPEN_TAG])) {
					continue;
				}

				if (in_array($token_id, [T_DIR, T_FILE])) {
					$cleaned = '';
					break;
				}

				if ($token_id === T_NAMESPACE) {
					$has_namespace = true;
				}

				$cleaned .= $token_value;
			}

			if (!$has_namespace) {
				continue;
			}

			$combined .= $cleaned;
		}

		return $combined;
	}
}
